\begin{thebibliography}{10}

\bibitem{gc_bench}
An artificial garbage collection benchmark.
\newblock \url{http://www.hboehm.info/gc/gc_bench.html}, Nov 2015.
\newblock (Last Accessed).

\bibitem{huffman-sicp}
Huffman encoding trees.
\newblock \url{https://mitpress.mit.edu/sicp/full-text/sicp/book/node41.html},
  Nov 2015.
\newblock (Last Accessed).

\bibitem{nofib}
{NoFib: Haskell Benchmark Suite}.
\newblock \url{http://git.haskell.org/nofib.git}, Nov 2015.
\newblock (Last accessed).

\bibitem{PLT-Scheme}
{PLT Scheme Benchmark Suite}.
\newblock \url{http://svn.plt-scheme.org/plt/trunk/collects/tests/}, Nov 2015.
\newblock (Last accessed).

\bibitem{appel.cps}
A.~W. Appel.
\newblock {\em Compiling with Continuations}.
\newblock Cambridge University Press, 2006.

\bibitem{asati14lgc}
R.~Asati, A.~Sanyal, A.~Karkare, and A.~Mycroft.
\newblock Liveness-based garbage collection.
\newblock In {\em Compiler Construction - 23rd International Conference, {CC}
  2014, Held as Part of the European Joint Conferences on Theory and Practice
  of Software, {ETAPS} 2014, Grenoble, France, April 5-13, 2014. Proceedings},
  pages 85--106, 2014.

\bibitem{Bryant86}
R.~E. Bryant.
\newblock Graph-based algorithms for boolean function manipulation.
\newblock {\em {IEEE} Trans. Computers}, 35(8):677--691, 1986.

\bibitem{chakravarty03perspective}
M.~M.~T. Chakravarty, G.~Keller, and P.~Zadarnowski.
\newblock A functional perspective on {SSA} optimisation algorithms.
\newblock {\em Electr. Notes Theor. Comput. Sci.}, 82(2):347--361, 2003.

\bibitem{chitil99deforest}
O.~Chitil.
\newblock Type inference builds a short cut to deforestation.
\newblock In {\em Proceedings of the fourth {ACM} {SIGPLAN} International
  Conference on Functional Programming {(ICFP} '99), Paris, France, September
  27-29, 1999.}, pages 249--260, 1999.

\bibitem{Clinger}
W.~D. Clinger.
\newblock Proper tail recursion and space efficiency.
\newblock In {\em Proceedings of the {ACM} {SIGPLAN} '98 Conference on
  Programming Language Design and Implementation (PLDI), Montreal, Canada, June
  17-19, 1998}, pages 174--185, 1998.

\bibitem{gill93ashort}
A.~J. Gill, J.~Launchbury, and S.~L. {Peyton Jones}.
\newblock A short cut to deforestation.
\newblock In {\em Proceedings of the conference on Functional programming
  languages and computer architecture, {FPCA} 1993, Copenhagen, Denmark, June
  9-11, 1993}, pages 223--232, 1993.

\bibitem{Hamilton}
G.~W. Hamilton.
\newblock Compile-time garbage collection for lazy functional languages.
\newblock In {\em Proceedings of the International Workshop on Memory
  Management}, IWMM '95, pages 119--144, London, UK, UK, 1995. Springer-Verlag.

\bibitem{Hirzel}
M.~Hirzel, A.~Diwan, and J.~Henkel.
\newblock On the usefulness of type and liveness accuracy for garbage
  collection and leak detection.
\newblock {\em {ACM} Trans. Program. Lang. Syst.}, 24(6):593--624, 2002.

\bibitem{HofmannJ03}
M.~Hofmann and S.~Jost.
\newblock Static prediction of heap space usage for first-order functional
  programs.
\newblock In {\em Conference Record of {POPL} 2003: The 30th {SIGPLAN-SIGACT}
  Symposium on Principles of Programming Languages, New Orleans, Louisisana,
  USA, January 15-17, 2003}, pages 185--197, 2003.

\bibitem{inoue88analysis}
K.~Inoue, H.~Seki, and H.~Yagi.
\newblock Analysis of functional programs to detect run-time garbage cells.
\newblock {\em {ACM} Trans. Program. Lang. Syst.}, 10(4):555--578, 1988.

\bibitem{jones89compile}
S.~B. Jones and D.~Le~M{\'e}tayer.
\newblock Compile-time garbage collection by sharing analysis.
\newblock In {\em Proceedings of the Fourth International Conference on
  Functional Programming Languages and Computer Architecture}, FPCA '89, pages
  54--74, New York, NY, USA, 1989. ACM.

\bibitem{karkare07liveness}
A.~Karkare, U.~P. Khedker, and A.~Sanyal.
\newblock Liveness of heap data for functional programs.
\newblock In {\em Heap Analysis and Verification, {HAV} 2007, a satellite
  workshop of European Joint Conferences on Theory and Practice of Software,
  {ETAPS} 2007, March 25, 2007, Braga, Portugal}, 2007.

\bibitem{karkare06effectiveness}
A.~Karkare, A.~Sanyal, and U.~P. Khedker.
\newblock Effectiveness of garbage collection in {MIT/GNU} scheme.
\newblock {\em CoRR}, abs/cs/0611093, 2006.

\bibitem{khedker07heap}
U.~P. Khedker, A.~Sanyal, and A.~Karkare.
\newblock Heap reference analysis using access graphs.
\newblock {\em {ACM} Trans. Program. Lang. Syst.}, 30(1), 2007.

\bibitem{lee05static}
O.~Lee, H.~Yang, and K.~Yi.
\newblock Static insertion of safe and effective memory reuse commands into
  ml-like programs.
\newblock {\em Sci. Comput. Program.}, 58(1-2):141--178, 2005.

\bibitem{Mitchell:2009}
N.~Mitchell and C.~Runciman.
\newblock Losing functions without gaining data: another look at
  defunctionalisation.
\newblock In {\em Proceedings of the 2nd {ACM} {SIGPLAN} Symposium on Haskell,
  Haskell 2009, Edinburgh, Scotland, UK, 3 September 2009}, pages 13--24, 2009.

\bibitem{mohri00regular}
M.~Mohri and M.-J. Nederhof.
\newblock Regular approximation of context-free grammars through
  transformation.
\newblock In {\em Robustness in Language and Speech Technology}. Kluwer
  Academic Publishers, 2000.

\bibitem{ONeill}
M.~E. O'Neill and F.~W. Burton.
\newblock Smarter garbage collection with simplifiers.
\newblock In {\em Proceedings of the 2006 workshop on Memory System Performance
  and Correctness, San Jose, California, USA, October 11, 2006}, pages 19--30,
  2006.

\bibitem{Jones87}
S.~L. {Peyton Jones}.
\newblock {\em The Implementation of Functional Programming Languages}.
\newblock Prentice-Hall, 1987.

\bibitem{rojemo96lag}
N.~R{\"{o}}jemo and C.~Runciman.
\newblock Lag, drag, void and use - heap profiling and space-efficient
  compilation revisited.
\newblock In {\em Proceedings of the 1996 {ACM} {SIGPLAN} International
  Conference on Functional Programming {(ICFP} '96), Philadelphia,
  Pennsylvania, May 24-26, 1996.}, pages 34--41, 1996.

\bibitem{shaham01heap}
R.~Shaham, E.~K. Kolodner, and S.~Sagiv.
\newblock Heap profiling for space-efficient {Java}.
\newblock In {\em Proceedings of the 2001 {ACM} {SIGPLAN} Conference on
  Programming Language Design and Implementation (PLDI), Snowbird, Utah, USA,
  June 20-22, 2001}, pages 104--113, 2001.

\bibitem{shaham02estimating}
R.~Shaham, E.~K. Kolodner, and S.~Sagiv.
\newblock Estimating the impact of heap liveness information on space
  consumption in {Java}.
\newblock In {\em Proceedings of The Workshop on Memory Systems Performance
  {(MSP} 2002), June 16, 2002 and The International Symposium on Memory
  Management {(ISMM} 2002), June 20-21, 2002, Berlin, Germany}, pages 171--182,
  2002.

\bibitem{ran.shaham-sas03}
R.~Shaham, E.~Yahav, E.~K. Kolodner, and S.~Sagiv.
\newblock Establishing local temporal heap safety properties with applications
  to compile-time memory management.
\newblock In {\em Static Analysis, 10th International Symposium, {SAS} 2003,
  San Diego, CA, USA, June 11-13, 2003, Proceedings}, pages 483--503, 2003.

\bibitem{shao00efficient}
Z.~Shao and A.~W. Appel.
\newblock Efficient and safe-for-space closure conversion.
\newblock {\em {ACM} Trans. Program. Lang. Syst.}, 22(1):129--161, 2000.

\bibitem{Shivers:1988}
O.~Shivers.
\newblock Control-flow analysis in scheme.
\newblock In {\em Proceedings of the {ACM} SIGPLAN'88 Conference on Programming
  Language Design and Implementation (PLDI), Atlanta, Georgia, USA, June 22-24,
  1988}, pages 164--174, 1988.

\bibitem{tofte98region}
M.~Tofte and L.~Birkedal.
\newblock A region inference algorithm.
\newblock {\em {ACM} Trans. Program. Lang. Syst.}, 20(4):724--767, 1998.

\bibitem{wadler88deforest}
P.~Wadler.
\newblock Deforestation: {Transforming} programs to eliminate trees.
\newblock In {\em {ESOP} '88, 2nd European Symposium on Programming, Nancy,
  France, March 21-24, 1988, Proceedings}, pages 344--358, 1988.

\end{thebibliography}
