Terminals unused in grammar

   COMMA


Grammar

    0 $accept: program "end of file"

    1 program: list_of_defines expr

    2 list_of_defines: /* empty */
    3                | list_of_defines define

    4 define: LP DEFINE LP ID list_of_identifiers RP expr RP

    5 list_of_identifiers: /* empty */
    6                    | list_of_identifiers ID

    7 expr: ID
    8     | ICONST
    9     | SCONST
   10     | BCONST
   11     | NIL
   12     | if_expr
   13     | let_expr
   14     | primapp_expr
   15     | funapp_expr

   16 if_expr: LP IF expr expr expr RP

   17 let_expr: LP LET LP LP ID expr RP RP expr RP

   18 list_of_exprs: /* empty */
   19              | list_of_exprs expr

   20 primapp_expr: LP prim_app RP

   21 funapp_expr: LP ID list_of_exprs RP

   22 prim_app: PAIRQ expr
   23         | NULLQ expr
   24         | EQQ expr expr
   25         | CAR expr
   26         | CDR expr
   27         | CONS expr expr
   28         | ADD expr expr
   29         | SUB expr expr
   30         | MUL expr expr
   31         | DIV expr expr
   32         | MOD expr expr
   33         | LT expr expr
   34         | GT expr expr
   35         | EQ expr expr


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
COMMA (258)
LP (259) 4 16 17 20 21
RP (260) 4 16 17 20 21
ADD (261) 28
SUB (262) 29
MUL (263) 30
DIV (264) 31
MOD (265) 32
PAIRQ (266) 22
NULLQ (267) 23
EQQ (268) 24
CONS (269) 27
CAR (270) 25
CDR (271) 26
LT (272) 33
GT (273) 34
EQ (274) 35
DEFINE (275) 4
LET (276) 17
IF (277) 16
NIL (278) 11
ICONST (279) 8
BCONST (280) 10
SCONST (281) 9
ID (282) 4 6 7 17 21


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1, on right: 0
list_of_defines (30)
    on left: 2 3, on right: 1 3
define (31)
    on left: 4, on right: 3
list_of_identifiers (32)
    on left: 5 6, on right: 4 6
expr (33)
    on left: 7 8 9 10 11 12 13 14 15, on right: 1 4 16 17 19 22 23
    24 25 26 27 28 29 30 31 32 33 34 35
if_expr (34)
    on left: 16, on right: 12
let_expr (35)
    on left: 17, on right: 13
list_of_exprs (36)
    on left: 18 19, on right: 19 21
primapp_expr (37)
    on left: 20, on right: 14
funapp_expr (38)
    on left: 21, on right: 15
prim_app (39)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35, on right: 20


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 2 (list_of_defines)

    program          go to state 1
    list_of_defines  go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: list_of_defines . expr
    3 list_of_defines: list_of_defines . define

    LP      shift, and go to state 4
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    define        go to state 10
    expr          go to state 11
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

    4 define: LP . DEFINE LP ID list_of_identifiers RP expr RP
   16 if_expr: LP . IF expr expr expr RP
   17 let_expr: LP . LET LP LP ID expr RP RP expr RP
   20 primapp_expr: LP . prim_app RP
   21 funapp_expr: LP . ID list_of_exprs RP

    ADD     shift, and go to state 16
    SUB     shift, and go to state 17
    MUL     shift, and go to state 18
    DIV     shift, and go to state 19
    MOD     shift, and go to state 20
    PAIRQ   shift, and go to state 21
    NULLQ   shift, and go to state 22
    EQQ     shift, and go to state 23
    CONS    shift, and go to state 24
    CAR     shift, and go to state 25
    CDR     shift, and go to state 26
    LT      shift, and go to state 27
    GT      shift, and go to state 28
    EQ      shift, and go to state 29
    DEFINE  shift, and go to state 30
    LET     shift, and go to state 31
    IF      shift, and go to state 32
    ID      shift, and go to state 33

    prim_app  go to state 34


State 5

   11 expr: NIL .

    $default  reduce using rule 11 (expr)


State 6

    8 expr: ICONST .

    $default  reduce using rule 8 (expr)


State 7

   10 expr: BCONST .

    $default  reduce using rule 10 (expr)


State 8

    9 expr: SCONST .

    $default  reduce using rule 9 (expr)


State 9

    7 expr: ID .

    $default  reduce using rule 7 (expr)


State 10

    3 list_of_defines: list_of_defines define .

    $default  reduce using rule 3 (list_of_defines)


State 11

    1 program: list_of_defines expr .

    $default  reduce using rule 1 (program)


State 12

   12 expr: if_expr .

    $default  reduce using rule 12 (expr)


State 13

   13 expr: let_expr .

    $default  reduce using rule 13 (expr)


State 14

   14 expr: primapp_expr .

    $default  reduce using rule 14 (expr)


State 15

   15 expr: funapp_expr .

    $default  reduce using rule 15 (expr)


State 16

   28 prim_app: ADD . expr expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 36
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 17

   29 prim_app: SUB . expr expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 37
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 18

   30 prim_app: MUL . expr expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 38
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 19

   31 prim_app: DIV . expr expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 39
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 20

   32 prim_app: MOD . expr expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 40
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 21

   22 prim_app: PAIRQ . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 41
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 22

   23 prim_app: NULLQ . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 42
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 23

   24 prim_app: EQQ . expr expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 43
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 24

   27 prim_app: CONS . expr expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 44
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 25

   25 prim_app: CAR . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 45
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 26

   26 prim_app: CDR . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 46
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 27

   33 prim_app: LT . expr expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 47
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 28

   34 prim_app: GT . expr expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 48
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 29

   35 prim_app: EQ . expr expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 49
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 30

    4 define: LP DEFINE . LP ID list_of_identifiers RP expr RP

    LP  shift, and go to state 50


State 31

   17 let_expr: LP LET . LP LP ID expr RP RP expr RP

    LP  shift, and go to state 51


State 32

   16 if_expr: LP IF . expr expr expr RP

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 52
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 33

   21 funapp_expr: LP ID . list_of_exprs RP

    $default  reduce using rule 18 (list_of_exprs)

    list_of_exprs  go to state 53


State 34

   20 primapp_expr: LP prim_app . RP

    RP  shift, and go to state 54


State 35

   16 if_expr: LP . IF expr expr expr RP
   17 let_expr: LP . LET LP LP ID expr RP RP expr RP
   20 primapp_expr: LP . prim_app RP
   21 funapp_expr: LP . ID list_of_exprs RP

    ADD    shift, and go to state 16
    SUB    shift, and go to state 17
    MUL    shift, and go to state 18
    DIV    shift, and go to state 19
    MOD    shift, and go to state 20
    PAIRQ  shift, and go to state 21
    NULLQ  shift, and go to state 22
    EQQ    shift, and go to state 23
    CONS   shift, and go to state 24
    CAR    shift, and go to state 25
    CDR    shift, and go to state 26
    LT     shift, and go to state 27
    GT     shift, and go to state 28
    EQ     shift, and go to state 29
    LET    shift, and go to state 31
    IF     shift, and go to state 32
    ID     shift, and go to state 33

    prim_app  go to state 34


State 36

   28 prim_app: ADD expr . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 55
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 37

   29 prim_app: SUB expr . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 56
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 38

   30 prim_app: MUL expr . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 57
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 39

   31 prim_app: DIV expr . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 58
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 40

   32 prim_app: MOD expr . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 59
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 41

   22 prim_app: PAIRQ expr .

    $default  reduce using rule 22 (prim_app)


State 42

   23 prim_app: NULLQ expr .

    $default  reduce using rule 23 (prim_app)


State 43

   24 prim_app: EQQ expr . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 60
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 44

   27 prim_app: CONS expr . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 61
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 45

   25 prim_app: CAR expr .

    $default  reduce using rule 25 (prim_app)


State 46

   26 prim_app: CDR expr .

    $default  reduce using rule 26 (prim_app)


State 47

   33 prim_app: LT expr . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 62
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 48

   34 prim_app: GT expr . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 63
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 49

   35 prim_app: EQ expr . expr

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 64
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 50

    4 define: LP DEFINE LP . ID list_of_identifiers RP expr RP

    ID  shift, and go to state 65


State 51

   17 let_expr: LP LET LP . LP ID expr RP RP expr RP

    LP  shift, and go to state 66


State 52

   16 if_expr: LP IF expr . expr expr RP

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 67
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 53

   19 list_of_exprs: list_of_exprs . expr
   21 funapp_expr: LP ID list_of_exprs . RP

    LP      shift, and go to state 35
    RP      shift, and go to state 68
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 69
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 54

   20 primapp_expr: LP prim_app RP .

    $default  reduce using rule 20 (primapp_expr)


State 55

   28 prim_app: ADD expr expr .

    $default  reduce using rule 28 (prim_app)


State 56

   29 prim_app: SUB expr expr .

    $default  reduce using rule 29 (prim_app)


State 57

   30 prim_app: MUL expr expr .

    $default  reduce using rule 30 (prim_app)


State 58

   31 prim_app: DIV expr expr .

    $default  reduce using rule 31 (prim_app)


State 59

   32 prim_app: MOD expr expr .

    $default  reduce using rule 32 (prim_app)


State 60

   24 prim_app: EQQ expr expr .

    $default  reduce using rule 24 (prim_app)


State 61

   27 prim_app: CONS expr expr .

    $default  reduce using rule 27 (prim_app)


State 62

   33 prim_app: LT expr expr .

    $default  reduce using rule 33 (prim_app)


State 63

   34 prim_app: GT expr expr .

    $default  reduce using rule 34 (prim_app)


State 64

   35 prim_app: EQ expr expr .

    $default  reduce using rule 35 (prim_app)


State 65

    4 define: LP DEFINE LP ID . list_of_identifiers RP expr RP

    $default  reduce using rule 5 (list_of_identifiers)

    list_of_identifiers  go to state 70


State 66

   17 let_expr: LP LET LP LP . ID expr RP RP expr RP

    ID  shift, and go to state 71


State 67

   16 if_expr: LP IF expr expr . expr RP

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 72
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 68

   21 funapp_expr: LP ID list_of_exprs RP .

    $default  reduce using rule 21 (funapp_expr)


State 69

   19 list_of_exprs: list_of_exprs expr .

    $default  reduce using rule 19 (list_of_exprs)


State 70

    4 define: LP DEFINE LP ID list_of_identifiers . RP expr RP
    6 list_of_identifiers: list_of_identifiers . ID

    RP  shift, and go to state 73
    ID  shift, and go to state 74


State 71

   17 let_expr: LP LET LP LP ID . expr RP RP expr RP

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 75
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 72

   16 if_expr: LP IF expr expr expr . RP

    RP  shift, and go to state 76


State 73

    4 define: LP DEFINE LP ID list_of_identifiers RP . expr RP

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 77
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 74

    6 list_of_identifiers: list_of_identifiers ID .

    $default  reduce using rule 6 (list_of_identifiers)


State 75

   17 let_expr: LP LET LP LP ID expr . RP RP expr RP

    RP  shift, and go to state 78


State 76

   16 if_expr: LP IF expr expr expr RP .

    $default  reduce using rule 16 (if_expr)


State 77

    4 define: LP DEFINE LP ID list_of_identifiers RP expr . RP

    RP  shift, and go to state 79


State 78

   17 let_expr: LP LET LP LP ID expr RP . RP expr RP

    RP  shift, and go to state 80


State 79

    4 define: LP DEFINE LP ID list_of_identifiers RP expr RP .

    $default  reduce using rule 4 (define)


State 80

   17 let_expr: LP LET LP LP ID expr RP RP . expr RP

    LP      shift, and go to state 35
    NIL     shift, and go to state 5
    ICONST  shift, and go to state 6
    BCONST  shift, and go to state 7
    SCONST  shift, and go to state 8
    ID      shift, and go to state 9

    expr          go to state 81
    if_expr       go to state 12
    let_expr      go to state 13
    primapp_expr  go to state 14
    funapp_expr   go to state 15


State 81

   17 let_expr: LP LET LP LP ID expr RP RP expr . RP

    RP  shift, and go to state 82


State 82

   17 let_expr: LP LET LP LP ID expr RP RP expr RP .

    $default  reduce using rule 17 (let_expr)
